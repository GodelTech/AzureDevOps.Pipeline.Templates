parameters:
- name: vmImage
  displayName: 'Pool VM image'
  type: string
  default: 'ubuntu-latest'

- name: environmentName
  type: string
  default: ''

- name: ciPipelineResourceName
  displayName: 'CI pipeline resource name'
  type: string
  default: 'ci'

- name: dependsOn
  displayName: 'Depends On'
  type: object
  default: []

- name: condition
  displayName: 'Condition'
  type: string
  default: 'succeeded()'

- name: azureServiceConnectionName
  displayName: 'Name of connection to Azure'
  type: string
  default: ''

- name: projectArtifactName
  displayName: 'Project artifact name'
  type: string
  default: 'project'

- name: staticWebAppName
  displayName: 'Static Web App name'
  type: string
  default: ''

- name: staticWebAppApiKey
  displayName: 'Static Web App Api Key'
  type: string
  default: ''

jobs:
- deployment: Deploy
  displayName: 'Deploy'
  pool:
    vmImage: ${{ parameters.vmImage }}
  environment: ${{ parameters.environmentName }}
  dependsOn: ${{ parameters.dependsOn }}
  condition: ${{ parameters.condition }}
  strategy:
    runOnce:
      deploy:
        steps:
        - download: ${{ parameters.ciPipelineResourceName }}
          displayName: 'Download artifact ''${{ parameters.projectArtifactName }}'''
          artifact: ${{ parameters.projectArtifactName }}

        - task: AzureCLI@2
          displayName: 'Load deploy token for Static Web App'
          condition: |
            and
            (
              succeeded(),
              ne('${{ parameters.azureServiceConnectionName }}', ''),
              ne('${{ parameters.staticWebAppName }}', '')
            )
          inputs:
            azureSubscription: ${{ parameters.azureServiceConnectionName }}
            scriptType: 'pscore' 
            scriptLocation: 'inlineScript'
            inlineScript: |
              Write-Host "Getting deploy key for ${{ parameters.staticWebAppName }}"
              $secretInfo = $(az staticwebapp secrets list --name ${{ parameters.staticWebAppName }}) | ConvertFrom-JSON
              Write-Host "##vso[task.setvariable variable=staticWebAppApiKey;issecret=true;isreadonly=true;]$($secretInfo.properties.apiKey)"

        - task: AzureStaticWebApp@0
          displayName: 'Deploy in Static Web App'
          inputs:
            workingDirectory: '$(Pipeline.Workspace)/${{ parameters.ciPipelineResourceName }}'
            app_location: '/${{ parameters.projectArtifactName }}'
            skip_app_build: true
            skip_api_build: true
            ${{ if ne(parameters.staticWebAppApiKey, '') }}:
              azure_static_web_apps_api_token: '${{ parameters.staticWebAppApiKey }}'
            ${{ if ne(variables.staticWebAppApiKey, '') }}:
              azure_static_web_apps_api_token: '$(staticWebAppApiKey)'
