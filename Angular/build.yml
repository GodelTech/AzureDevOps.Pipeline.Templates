parameters:
- name: preBuildSteps
  displayName: 'Steps to run before build'
  type: stepList
  default: []

- name: checkWarnings
  displayName: 'Check warnings'
  type: boolean
  default: true

- name: checkCoverage
  displayName: 'Check code coverage'
  type: boolean
  default: true

steps:
- ${{ each step in parameters.preBuildSteps }}:
  - ${{ each pair in step }}:
      ${{ if ne(pair.value, 'CmdLine@2') }}:
        ${{ pair.key }}: ${{ pair.value }}       
      ${{ if eq(pair.value, 'CmdLine@2') }}: 
        # Step is rejected by raising a YAML syntax error: Unexpected value 'CmdLine@2'
        '${{ pair.value }}': error

- task: NodeTool@0
  displayName: 'Install Node.js 16.x'
  inputs:
    versionSpec: '16.x'
    checkLatest: true

- task: Npm@1
  displayName: 'Install Angular CLI'
  inputs:
    command: 'custom'
    customCommand: 'install -g @angular/cli'

- task: Npm@1
  displayName: 'Install packages'
  inputs:
    command: 'install'

- task: Npm@1
  displayName: 'Build'
  inputs:
    command: 'custom'
    customCommand: 'run ng build'

- task: Npm@1
  displayName: "Run lint"
  inputs:
    command: 'custom'
    customCommand: 'run ng lint'

- task: Npm@1
  displayName: 'Run unit tests'
  inputs:
    command: 'custom'
    customCommand: 'run ng test -- --browsers=ChromeHeadless --code-coverage --watch=false'

- task: PublishTestResults@2
  displayName: "Publish test results"
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'TestResults/TESTS*.xml'
    mergeTestResults: true

- task: BuildQualityChecks@8
  displayName: 'Warnings quality check'
  condition: |
    and
    (
      succeeded(),
      eq(${{ parameters.checkWarnings }}, true)
    )
  inputs:
    checkWarnings: true
    warningFailOption: 'fixed'
    warningThreshold: '0'
    showStatistics: true

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage reports'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/coverage/**/*.xml'

- task: BuildQualityChecks@8
  displayName: 'Line Code coverage quality check'
  condition: |
    and
    (
      succeeded(),
      eq(${{ parameters.checkCoverage }}, true)
    )
  inputs:
    checkCoverage: true
    coverageFailOption: 'fixed'
    coverageType: 'lines'
    treat0of0as100: true
    coverageThreshold: '80'

- task: BuildQualityChecks@8
  displayName: 'Branches Code coverage quality check'
  condition: |
    and
    (
      succeeded(),
      eq(${{ parameters.checkCoverage }}, true)
    )
  inputs:
    checkCoverage: true
    coverageFailOption: 'fixed'
    coverageType: 'branches'
    treat0of0as100: true
    coverageThreshold: '80'
