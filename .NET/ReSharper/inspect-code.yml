parameters:
- name: buildConfiguration
  displayName: 'Build configuration'
  type: string
  default: 'Release'

- name: enableReSharperInspectCode
  displayName: 'Enable ReSharper inspect code'
  type: boolean
  default: true

steps:
- task: PowerShell@2
  displayName: 'Get solution name from repository name'
  condition: |
    and
    (
      succeeded(),
      eq(${{ parameters.enableReSharperInspectCode }}, true)
    )
  inputs:
    targetType: 'inline'
    script: |
      $solutionNameArray = "$(Build.Repository.Name)".Split("/")
      $solutionName = $solutionNameArray[0]

      if ($solutionNameArray.Length -gt 1) {
        $solutionName = $solutionNameArray[1]
      }

      Write-Host "##vso[task.setvariable variable=solutionName;]$solutionName"

- script: 'dotnet tool install --global JetBrains.ReSharper.GlobalTools'
  displayName: 'Install ReSharper tool'
  condition: |
    and
    (
      succeeded(),
      eq(${{ parameters.enableReSharperInspectCode }}, true)
    )

- script: jb inspectcode '$(Build.SourcesDirectory)/$(solutionName).sln'
    "--output=$(Build.SourcesDirectory)/TestResults/ReSharper/ReSharper.xml"
    "--properties:Configuration=${{ parameters.buildConfiguration }}"
    "--no-build"
  displayName: 'ReSharper inspect code'
  condition: |
    and
    (
      succeeded(),
      eq(${{ parameters.enableReSharperInspectCode }}, true)
    )

- task: PublishPipelineArtifact@1
  displayName: 'Publish ReSharper inspect code report'
  condition: |
    and
    (
      succeeded(),
      eq(${{ parameters.enableReSharperInspectCode }}, true)
    )
  inputs:
    targetPath: '$(Build.SourcesDirectory)/TestResults/ReSharper'
    artifactName: 'ReSharperInspectCodeReport'
