parameters:
- name: vmImage
  displayName: 'Pool VM image'
  type: string
  default: 'ubuntu-latest'

- name: buildConfiguration
  displayName: 'Build configuration'
  type: string
  default: 'Release'

- name: preBuildSteps
  displayName: 'Steps to run before build'
  type: stepList
  default: []

- name: dotNetSDKVersion
  displayName: '.NET Core SDK version'
  type: string
  default: ''

- name: codeCoverageSettingsFullPath
  displayName: 'The path of the code coverage settings file'
  type: string
  default: 'CodeCoverage.runsettings'

- name: restoreOnlyFromNuGetFeed
  displayName: 'Restore only from NuGet feed'
  type: boolean
  default: true

- name: nugetConfigPath
  displayName: 'NuGet configuration path'
  type: string
  default: ''

- name: internalFeed
  displayName: 'Internal feed'
  type: string
  default: ''

- name: checkWarnings
  displayName: 'Check warnings'
  type: boolean
  default: true

- name: checkCoverage
  displayName: 'Check code coverage'
  type: boolean
  default: true

- name: projects
  displayName: 'The path to the csproj file(s) to use'
  type: string
  default: '**/FunctionApp.csproj'

- name: projectArtifactName
  displayName: 'Project artifact name'
  type: string
  default: 'project'

stages:
- stage: Build
  displayName: 'Build'

  jobs:
  - job: Build
    displayName: 'Build'
    pool:
      vmImage: ${{ parameters.vmImage }}
    steps:
    - template: 'build.yml'
      parameters:
        buildConfiguration: ${{ parameters.buildConfiguration }}
        preBuildSteps: ${{ parameters.preBuildSteps }}
        dotNetSDKVersion: ${{ parameters.dotNetSDKVersion }}
        codeCoverageSettingsFullPath: ${{ parameters.codeCoverageSettingsFullPath }}
        restoreOnlyFromNuGetFeed: ${{ parameters.restoreOnlyFromNuGetFeed }}
        nugetConfigPath: ${{ parameters.nugetConfigPath }}
        internalFeed: ${{ parameters.internalFeed }}
        checkWarnings: ${{ parameters.checkWarnings }}
        checkCoverage: ${{ parameters.checkCoverage }}

  - job: Publish
    displayName: 'Publish'
    pool:
      vmImage: ${{ parameters.vmImage }}
    dependsOn: Build
    steps:
    - template: '../publish.yml'
      parameters:
        buildConfiguration: ${{ parameters.buildConfiguration }}
        isWebProjects: false
        projects: ${{ parameters.projects }}
        projectArtifactName: ${{ parameters.projectArtifactName }}
